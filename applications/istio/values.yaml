base:
  defaults:
    global:
      imagePullSecrets: []
      istioNamespace: istio-system
      externalIstiod: false
      remotePilotAddress: ""
      platform: ""
      ipFamilyPolicy: ""
      ipFamilies: []
    base:
      enableCRDTemplates: false
      validationURL: ""
      validationCABundle: ""
      enableIstioConfigCRDs: true
    defaultRevision: "default"
    experimental:
      stableValidationPolicy: false
istiod:
  defaults:
    #.Values.pilot for discovery and mesh wide config

    ## Discovery Settings
    pilot:
      autoscaleEnabled: true
      autoscaleMin: 1
      autoscaleMax: 5
      autoscaleBehavior: {}
      replicaCount: 1
      rollingMaxSurge: 100%
      rollingMaxUnavailable: 25%

      hub: ""
      tag: ""
      variant: ""
      image: pilot
      traceSampling: 1.0
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
      seccompProfile: {}
      cni:
        enabled: false
        provider: default
      extraContainerArgs: []
      env: {}
      taint:
        enabled: false
        namespace: ""
      affinity: {}
      tolerations: []
      cpu:
        targetAverageUtilization: 80
      memory: {}
      volumeMounts: []
      volumes: []
      nodeSelector: {}
      podAnnotations: {}
      serviceAnnotations: {}
      serviceAccountAnnotations: {}
      topologySpreadConstraints: []
      jwksResolverExtraRootCA: ""
      configSource:
        subscribedResources: []
      keepaliveMaxServerConnectionAge: 30m
      deploymentLabels: {}
      configMap: true
      podLabels: {}
      ipFamilyPolicy: ""
      ipFamilies: []

    sidecarInjectorWebhook:
      neverInjectSelector: []
      alwaysInjectSelector: []
      injectedAnnotations: {}
      enableNamespacesByDefault: false
      reinvocationPolicy: Never
      rewriteAppHTTPProbe: true
      templates: {}
      defaultTemplates: []
    istiodRemote:
      injectionURL: ""
      injectionPath: "/inject"
      injectionCABundle: ""
    telemetry:
      enabled: true
      v2:
        enabled: true
        prometheus:
          enabled: true
        stackdriver:
          enabled: false
    revision: ""
    revisionTags: []
    ownerName: ""
    meshConfig:
      enablePrometheusMerge: true
    experimental:
      stableValidationPolicy: false
    global:
      istioNamespace: istio-system
      certSigners: []
      defaultPodDisruptionBudget:
        enabled: true
      defaultResources:
        requests:
          cpu: 10m
        #   memory: 128Mi
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
      hub: gcr.io/istio-testing
      tag: latest
      variant: ""
      imagePullPolicy: ""
      imagePullSecrets: []
      istiod:
        enableAnalysis: false
      logAsJson: false
      logging:
        level: "default:info"
      omitSidecarInjectorConfigMap: false
      operatorManageWebhooks: false
      priorityClassName: ""
      proxy:
        image: proxyv2
        autoInject: enabled
        clusterDomain: "cluster.local"
        componentLogLevel: "misc:error"
        enableCoreDump: false
        excludeInboundPorts: ""
        includeInboundPorts: "*"
        includeIPRanges: "*"
        excludeIPRanges: ""
        includeOutboundPorts: ""
        excludeOutboundPorts: ""
        logLevel: warning
        outlierLogPath: ""
        privileged: false
        readinessFailureThreshold: 4
        readinessInitialDelaySeconds: 0
        readinessPeriodSeconds: 15
        startupProbe:
          enabled: true
          failureThreshold: 600 # 10 minutes
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 100m
            memory: 128Mi
        statusPort: 15020
        tracer: "none"

      proxy_init:
        image: proxyv2
      remotePilotAddress: ""
      caAddress: ""
      externalIstiod: false
      configCluster: false
      configValidation: true
      meshID: ""
      meshNetworks: {}
      mountMtlsCerts: false
      multiCluster:
        enabled: false
        clusterName: ""
      network: ""
      pilotCertProvider: istiod
      sds:
        token:
          aud: istio-ca

      sts:
        servicePort: 0
      caName: ""
      autoscalingv2API: true

    base:
      enableIstioConfigCRDs: true

    istio_cni:
      chained: true
      provider: default
gateway:
  defaults:
    name: ""
    revision: ""
    replicaCount:
    kind: Deployment
    rbac:
      enabled: true
    serviceAccount:
      create: true
      annotations: {}
      name: ""

    podAnnotations:
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      prometheus.io/path: "/stats/prometheus"
      inject.istio.io/templates: "gateway"
      sidecar.istio.io/inject: "true"
    securityContext: ~
    containerSecurityContext: ~
    service:
      type: LoadBalancer
      ports:
        - name: status-port
          port: 15021
          protocol: TCP
          targetPort: 15021
        - name: http2
          port: 80
          protocol: TCP
          targetPort: 80
        - name: https
          port: 443
          protocol: TCP
          targetPort: 443
      annotations: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      externalTrafficPolicy: ""
      externalIPs: []
      ipFamilyPolicy: ""
      ipFamilies: []

    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi

    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 2
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: {}
      autoscaleBehavior: {}

    env: {}
    labels: {}
    annotations: {}
    nodeSelector: {}
    tolerations: []
    topologySpreadConstraints: []
    affinity: {}
    networkGateway: ""
    imagePullPolicy: ""
    imagePullSecrets: []
    podDisruptionBudget: {}
    terminationGracePeriodSeconds: 30
    volumes: []
    volumeMounts: []
    priorityClassName: ""
# kiali-server:
#   fullnameOverride: "kiali"
#   kiali_route_url: ""
#   additional_display_details:
#     - annotation: kiali.io/api-spec
#       icon_annotation: kiali.io/api-type
#       title: API Documentation
#   istio_namespace: "istio-system" # default is where Kiali is installed
#   auth:
#     openid: {}
#     openshift: {}
#     strategy: ""

#   clustering:
#     autodetect_secrets:
#       enabled: true
#       label: "kiali.io/multiCluster=true"
#     clusters: []

#   deployment:
#     accessible_namespaces:
#       - "**"
#     additional_service_yaml: {}
#     affinity:
#       node: {}
#       pod: {}
#       pod_anti: {}
#     configmap_annotations: {}
#     custom_secrets: []
#     host_aliases: []
#     hpa:
#       api_version: "autoscaling/v2"
#       spec: {}
#     image_digest: "" # use "sha256" if image_version is a sha256 hash (do NOT prefix this value with a "@")
#     image_name: quay.io/kiali/kiali
#     image_pull_policy: "Always"
#     image_pull_secrets: []
#     image_version: v1.39.0 # version like "v1.39" (see: https://quay.io/repository/kiali/kiali?tab=tags) or a digest hash
#     ingress:
#       additional_labels: {}
#       class_name: "nginx"
#       #enabled:
#       override_yaml:
#         metadata: {}
#     instance_name: "kiali"
#     logger:
#       log_format: "text"
#       log_level: "info"
#       time_field_format: "2006-01-02T15:04:05Z07:00"
#       sampler_rate: "1"
#     node_selector: {}
#     pod_annotations: {}
#     pod_labels: {}
#     priority_class_name: ""
#     replicas: 1
#     resources:
#       requests:
#         cpu: "10m"
#         memory: "64Mi"
#       limits:
#         memory: "1Gi"
#     secret_name: "kiali"
#     security_context: {}
#     service_annotations: {}
#     service_type: ""
#     tolerations: []
#     version_label: v1.39.0 # v1.39 # v1.39.0 # see: https://quay.io/repository/kiali/kiali?tab=tags
#     view_only_mode: false

#   external_services:
#     custom_dashboards:
#       enabled: true
#     istio:
#       root_namespace: ""

#   identity:
#     {}
#     #cert_file:
#     #private_key_file:

#   kiali_feature_flags:
#     certificates_information_indicators:
#       enabled: true
#       secrets:
#         - cacerts
#         - istio-ca-secret
#     disabled_features: []
#     validations:
#       ignore: ["KIA1301"]

#   login_token:
#     signing_key: ""

#   server:
#     port: 20001
#     #node_port:
#     observability:
#       metrics:
#         enabled: true
#         port: 9090
#     web_root: ""
